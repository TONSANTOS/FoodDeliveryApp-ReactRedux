{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarlo\\\\Documents\\\\MyApplications\\\\fooddeliveryapp-redux\\\\src\\\\Components\\\\CartItem\\\\CartItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AddRounded, RemoveRounded } from '@mui/icons-material';\nimport { useStateValue } from '../StateProvider/StateProvider';\nimport { actionType } from '../Reducer/reducer';\nimport './cart-item.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartItem(_ref) {\n  _s();\n\n  let {\n    price,\n    imgSrc,\n    name,\n    itemId\n  } = _ref;\n  let cartItems = [];\n  const [qty, setQty] = useState(1);\n  const [itemPrice, setItemPrice] = useState(parseInt(qty) * parseFloat(price));\n  const [{\n    cart\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    cartItems = cart;\n    setItemPrice(parseInt(qty) * parseFloat(price));\n  }, qty);\n\n  const updateQty = (action, id) => {\n    if (action == \"add\") {\n      setQty(qty + 1);\n    } else {\n      // o valor do estado inicial é um, então você precisa verificar se 1 e removê-lo\n      if (qty == 1) {\n        cartItems.pop(id);\n        dispatch({\n          type: actionType.SET_CART,\n          cart: cartItems\n        });\n      } else {\n        setQty(qty - 1);\n        console.log(\"QTY\", qty);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardItem\",\n    id: itemId,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgBox\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgSrc,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"itemName\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemQuantity\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"x \", qty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity\",\n          children: [/*#__PURE__*/_jsxDEV(RemoveRounded, {\n            className: \"itemRemove\",\n            onClick: () => updateQty(\"remove\", itemId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AddRounded, {\n            className: \"itemAdd\",\n            onClick: () => updateQty(\"add\", itemId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"itemPrice\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dolorSign\",\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"itemPriceValue\",\n        children: itemPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartItem, \"QVQZ9T3TjDAO6w8ot3t1/1o9+1o=\", false, function () {\n  return [useStateValue];\n});\n\n_c = CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["C:/Users/jarlo/Documents/MyApplications/fooddeliveryapp-redux/src/Components/CartItem/CartItem.jsx"],"names":["React","useEffect","useState","AddRounded","RemoveRounded","useStateValue","actionType","CartItem","price","imgSrc","name","itemId","cartItems","qty","setQty","itemPrice","setItemPrice","parseInt","parseFloat","cart","dispatch","updateQty","action","id","pop","type","SET_CART","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AddRounded, RemoveRounded } from '@mui/icons-material';\r\n\r\nimport { useStateValue } from '../StateProvider/StateProvider';\r\nimport { actionType } from '../Reducer/reducer';\r\n\r\nimport './cart-item.css';\r\n\r\nexport default function CartItem({ price, imgSrc, name, itemId }) {\r\n    let cartItems = []\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const [itemPrice, setItemPrice] = useState(parseInt(qty) * parseFloat(price));\r\n    const [{ cart }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        cartItems = cart;\r\n        setItemPrice(parseInt(qty) * parseFloat(price));\r\n    }, qty);\r\n\r\n    const updateQty = (action, id) => {\r\n        if (action == \"add\") {\r\n            setQty(qty + 1);\r\n        } else {\r\n            // o valor do estado inicial é um, então você precisa verificar se 1 e removê-lo\r\n            if (qty == 1) {\r\n                cartItems.pop(id);\r\n                dispatch({\r\n                    type: actionType.SET_CART,\r\n                    cart: cartItems,\r\n                });\r\n            } else {\r\n                setQty(qty - 1);\r\n                console.log(\"QTY\", qty);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"cardItem\" id={itemId}>\r\n            <div className=\"imgBox\">\r\n                <img src={imgSrc} alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"itemSection\">\r\n                <h2 className=\"itemName\">{name}</h2>\r\n                <div className=\"itemQuantity\">\r\n                    <span>x {qty}</span>\r\n                    <div className=\"quantity\">\r\n                        <RemoveRounded\r\n                            className=\"itemRemove\"\r\n                            onClick={() => updateQty(\"remove\", itemId)}\r\n                        />\r\n\r\n                        <AddRounded\r\n                            className=\"itemAdd\"\r\n                            onClick={() => updateQty(\"add\", itemId)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"itemPrice\">\r\n                <span className=\"dolorSign\">$</span> {\" \"}\r\n                <span className=\"itemPriceValue\">{itemPrice}</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}